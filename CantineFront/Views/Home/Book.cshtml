@using AutoMapper;
@using CantineBack.Models
@using CantineFront.Helpers;
@using Newtonsoft.Json;
@using CantineFront.Static;
@inject IHttpContextAccessor Accessor
@inject IMapper mapper;
@{
    // Votre logique C# reste identique
    var articlesInCart = Accessor.HttpContext?.Session.GetListObjectFromSession<Article>("ArticlesCart") ?? new List<Article>();
    var username = Accessor.HttpContext?.Session.GetString("Username");
    var userId = Accessor.HttpContext?.Session.GetInt32("UserId");
    var emplacements = Accessor.HttpContext?.Session.GetListObjectFromSession<Emplacement>("Emplacements") ?? new List<Emplacement>();
    var paymentMethods = Accessor.HttpContext?.Session.GetListObjectFromSession<PaymentMethod>("PaymentMethods") ?? new List<PaymentMethod>();
    IDictionary<int, int> articlePrixDict = new Dictionary<int, int>();
    var selectedArticles = articlesInCart.GroupBy(d => d.Id)
                              .Select(
                                  g =>
                                  {
                                      var a = new ArticleBooking
                                      {
                                          Id = g.Key,
                                          Quantite = g.Sum(s => 1),
                                      };
                                      a = mapper.Map<ArticleBooking>(g.First());
                                      a.Quantite = g.Sum(s => 1);
                                      articlePrixDict[a.Id] = a.PrixDeVente;
                                      return a;
                                  }
                              ).ToList();
    int montantTotal = 0;
    if (selectedArticles != null)
    {
        foreach (var item in selectedArticles)
        {
            montantTotal += item.PrixDeVente * item.Quantite;
        }
    }
    var articlePrixDictJSON = JsonConvert.SerializeObject(articlePrixDict);
}

@section Styles {
    <style>
        .btn-link, .btn-link:hover {
            background-color: transparent;
            border: none;
        }

        input[type=number] {
            min-width: 50px;
        }

        /* Design moderne */
        .modern-cart-section {
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            min-height: 100vh;
            padding: 5px 0;
        }

        .cart-card {
            border: none;
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .cart-header {
            background: linear-gradient(135deg, #FF6B35 0%, #00C9B1 100%);
            color: white;
            padding: 0.1rem;
        }

        .cart-item {
            border-bottom: 1px solid #f1f3f4;
            padding: 1.5rem 0;
            transition: all 0.3s ease;
        }

            .cart-item:hover {
                background: #fafbfc;
                transform: translateX(5px);
            }

        /* CORRECTIONS DU STYLE */
        .quantity-control {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 8px 12px;
            border: 2px solid #e9ecef;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .quantity-btn {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: white;
            border: 2px solid #dee2e6;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            font-size: 12px;
        }

            .quantity-btn:hover {
                background: #667eea;
                border-color: #667eea;
                color: white;
            }

        .quantity-input {
            width: 50px !important;
            text-align: center;
            border: none;
            background: transparent;
            font-weight: 600;
        }

        .cart-item-content {
            display: flex;
            align-items: center;
            gap: 15px;
            flex-wrap: wrap;
        }

        .item-details {
            flex: 1;
            min-width: 200px;
        }

        .price-section {
            display: flex;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
        }

        /* Correction pour l'image */
        .item-image {
            width: 80px;
            height: 80px;
            border-radius: 12px;
            object-fit: cover;
            border: 3px solid #fff;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            background: #f8f9fa; /* Fond de secours */
        }

        /* Correction pour le prix highlight */
        .price-highlight {
            font-size: 1.1rem;
            font-weight: 700;
            color: #FF6B35;
            white-space: nowrap;
        }

        /* Responsive amélioré */
        @@media (max-width: 768px) {
            .cart-item-content

        {
            gap: 10px;
        }

        .price-section {
            gap: 10px;
        }

        .quantity-control {
            padding: 6px 8px;
        }

        .item-image {
            width: 60px;
            height: 60px;
        }

        }



        .delete-btn {
            color: #dc3545;
            transition: all 0.3s ease;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .delete-btn:hover {
                background: #dc3545;
                color: white;
                transform: scale(1.1);
            }

        .summary-section {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            height: 100%;
            position: relative;
            overflow: hidden;
        }

            .summary-section::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #FF6B35, #00C9B1);
            }

        .summary-content {
            padding: 2rem;
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .summary-item {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            padding: 1rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .summary-select {
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            /* padding: 10px 15px; */
            background: rgba(255, 255, 255, 0.9);
            color: #2c3e50;
            font-weight: 500;
            transition: all 0.3s ease;
            width: 100%;
        }

            .summary-select:focus {
                border-color: #FF6B35;
                background: white;
                box-shadow: 0 0 0 0.2rem rgba(255, 107, 53, 0.2);
                outline: none;
            }


        .total-amount {
            font-size: 2rem;
            font-weight: 800;
            background: linear-gradient(135deg, #FF6B35, #00C9B1);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .btn-confirm-command {
            background: linear-gradient(135deg, #FF6B35 0%, #00C9B1 100%);
            border: none;
            border-radius: 12px;
            color: white;
            font-size: 1.1rem;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

            .btn-confirm-command::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
                transition: left 0.5s;
            }

            .btn-confirm-command:hover::before {
                left: 100%;
            }

            .btn-confirm-command:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(255, 107, 53, 0.4);
            }

        /* Responsive */
        @@media (max-width: 768px) {
            .summary-content

        {
            padding: 1.5rem;
        }

        .summary-item {
            padding: 0.8rem;
        }

        .total-amount {
            font-size: 1.5rem;
        }

        .btn-confirm-command {
            padding: 12px 20px;
            font-size: 1rem;
        }

        }

        /* Animation pour le solde */
        @@keyframes pulse-solde {
            0%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }

        }

        .solde-update {
            animation: pulse-solde 0.5s ease-in-out;
        }

        .form-control-modern {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            /* padding: 12px 16px; */
            transition: all 0.3s ease;
            background: white;
        }

            .form-control-modern:focus {
                border-color: #667eea;
                box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.1);
            }

        .btn-command {
            background: linear-gradient(135deg, #FF6B35 0%, #00C9B1 100%);
            border: none;
            border-radius: 15px;
            padding: 15px 30px;
            font-weight: 600;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            width: 100%;
        }

            .btn-command:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(255, 107, 53, 0.3);
            }

        .price-highlight {
            font-size: 1.5rem;
            font-weight: 700;
            color: #FF6B35;
        }

        .back-link {
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

            .back-link:hover {
                color: #5a67d8;
                transform: translateX(-5px);
            }

        .comment-box {
            border-radius: 12px;
            border: 2px solid #e9ecef;
            resize: none;
            min-height: 100px;
        }

            .comment-box:focus {
                border-color: #667eea;
                box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.1);
            }

        .item-image-container {
            flex-shrink: 0;
        }
        /* Responsive */
        @@media (max-width: 768px) {
            .cart-header {
                padding: 1.5rem;
            }

            .summary-content {
                padding: 1.5rem;
            }

            .item-image {
                width: 60px;
                height: 60px;
            }
        }
    </style>
}

<!-- Modern Cart Section -->
<section class="modern-cart-section">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-12">
                <div class="cart-card">
                    <div class="cart-header text-center">
                        <h1 class="display-5 fw-bold">🛒 Votre Panier</h1>
                        <p class="lead mb-0 opacity-90"><span id="selectedArticlesCount">@selectedArticles.Count</span> article(s) sélectionné(s)</p>
                    </div>

                    <form action="" id="formBooking">
                        <div class="row g-0">
                            <!-- Articles List -->
                            <div class="col-lg-8">
                                <div class="p-4 p-md-5">
                                    @if (selectedArticles.Any())
                                    {
                                        foreach (var item in selectedArticles)
                                        {
                                            <div class="cart-item" id="row_@item.Id">
                                                <div class="cart-item-content">
                                                    <!-- Image -->
                                                    <div class="item-image-container">
                                                        <img src="data:image/png;base64,@item.Image"
                                                             id="imageArticle_@item.Id"
                                                             class="item-image"
                                                             onerror="this.src='/images/default.png';"
                                                             alt="@item.Title">
                                                    </div>

                                                    <!-- Détails -->
                                                    <div class="item-details">
                                                        <h6 class="text-primary mb-1">@item.Categorie?.Name</h6>
                                                        <h5 class="text-dark fw-bold mb-2">@item.Title</h5>
                                                    </div>

                                                    <!-- Contrôle quantité et prix -->
                                                    <div class="price-section">
                                                        <div class="quantity-control">
                                                            <button class="quantity-btn" type="button"
                                                                    onclick="this.parentNode.querySelector('input[type=number]').stepDown();updateTotalPrice()">
                                                                <i class="fa fa-minus"></i>
                                                            </button>
                                                            <input id="quantite_@item.Id"
                                                                   min="1"
                                                                   name="Quantite"
                                                                   value="@item.Quantite"
                                                                   type="number"
                                                                   onchange="updateTotalPrice()"
                                                                   class="quantity-input" />
                                                            <button class="quantity-btn" type="button"
                                                                    onclick="this.parentNode.querySelector('input[type=number]').stepUp();updateTotalPrice()">
                                                                <i class="fa fa-plus"></i>
                                                            </button>
                                                        </div>

                                                        <span class="price-highlight">
                                                            <span id="prixTotal_@item.Id">@(item.Quantite* item.PrixDeVente)</span> XOF
                                                        </span>

                                                        <a href="#!" class="delete-btn deleteArticleCart" data-articleid="@item.Id">
                                                            <i class="fa fa-trash"></i>
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        <!-- Comment Section -->
                                        <div class="mt-4">
                                            <label class="form-label fw-bold text-dark mb-3">💬 Commentaire</label>
                                            <textarea class="form-control form-control-modern comment-box" name="Comment" id="Comment" placeholder="Ajoutez un commentaire pour votre commande..."></textarea>
                                        </div>

                                        <!-- Back to Shop -->
                                        <div class="mt-4 pt-3">
                                            <a href="/Home/Menu" class="back-link">
                                                <i class="fa fa-arrow-left me-2"></i>Continuer mes achats
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center py-5">
                                            <i class="fa fa-shopping-cart fa-4x text-muted mb-4"></i>
                                            <h4 class="text-muted">Votre panier est vide</h4>
                                            <p class="text-muted mb-4">Découvrez nos délicieux articles</p>
                                            <a href="/Home/Menu" class="btn btn-primary btn-lg">
                                                <i class="fa fa-utensils me-2"></i>Explorer le menu
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Order Summary -->
                            @if (selectedArticles.Any())
                            {
                                <div class="col-lg-4">
                                    <div class="summary-section h-100">
                                        <div class="summary-content">
                                            <!-- En-tête -->
                                            <div class="text-center mb-4">
                                                <h3 class="fw-bold mb-2">📋 Récapitulatif</h3>
                                                <p class="text-white-50 mb-0">Vérifiez votre commande</p>
                                            </div>

                                            <!-- Emplacement -->
                                            <div class="summary-item mb-4">
                                                <div class="d-flex align-items-center mb-2">
                                                    <i class="fa fa-map-marker-alt me-2 text-warning"></i>
                                                    <label class="form-label text-white mb-0 fw-semibold">Emplacement de livraison</label>
                                                </div>
                                                <select class="form-control summary-select" required name="EmplacementId" id="EmplacementId">
                                                    <option value="">Sélectionnez un emplacement</option>
                                                    @foreach (var emp in emplacements)
                                                    {
                                                        if (CantineFront.Static.AppSettings.ShopID != emp.Id && emp.Actif)
                                                        {
                                                            <option value="@emp.Id">@emp.Name!.ToUpper()</option>
                                                        }
                                                    }
                                                </select>
                                            </div>

                                            <!-- Méthode de paiement -->
                                            <div class="summary-item mb-4">
                                                <div class="d-flex align-items-center mb-2">
                                                    <i class="fa fa-credit-card me-2 text-info"></i>
                                                    <label class="form-label text-white mb-0 fw-semibold">Méthode de paiement</label>
                                                </div>
                                                <select class="form-control summary-select" required name="PaymentMethodId" id="PaymentMethodId">
                                                    <option value="">Sélectionnez un moyen de paiement</option>
                                                    @foreach (var pm in paymentMethods)
                                                    {
                                                        if (pm.Code == "QRCODE")
                                                        {
                                                            <option selected data-code="@pm.Code" value="@pm.Id">@pm.Name</option>
                                                        }
                                                        else
                                                        {
                                                            <option data-code="@pm.Code" value="@pm.Id">@pm.Name</option>
                                                        }
                                                    }
                                                </select>
                                            </div>

                                            <!-- Total -->
                                            <div class="summary-total">
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <h4 class="text-white mb-0">Total à payer</h4>
                                                    <h2 class="total-amount mb-0" id="totalPrice">@montantTotal XOF</h2>
                                                </div>

                                                <button type="button" class="btn btn-confirm-command w-100 py-3" id="btnCommand">
                                                    <i class="fa fa-paper-plane me-2"></i>
                                                    <span class="fw-bold">Finaliser la commande</span>
                                                </button>

                                                <div class="text-center mt-3">
                                                    <small class="text-white-50">
                                                        <i class="fa fa-lock me-1"></i>
                                                        Paiement sécurisé
                                                    </small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {



    <script>
        const UserId = @userId;
        let checkSolde = true;
        $("#formBooking").validate({
            rules: {
                "EmplacementId": { required: true },
                "Quantite": { required: true, min: 1 },
            },
            messages: {
                "Quantite": { min: "La quantité doit être supérieure ou égale à 1." },
            },
            feedbackIcons: {
                valid: 'fa fa-check',
                invalid: 'fa fa-remove',
                validating: 'fa fa-refresh'
            },
            errorClass: "error fail-alert",
            validClass: "valid success-alert",
            errorPlacement: function (error, element) {
                var placement = $(element).data('error');
                if ($(element).attr("name") == "Quantite") {

                    error.insertAfter(element.closest("[id^='row_']"));
                }

                else if (placement) {

                    console.log(placement.classNames)
                    $(placement).append(error)
                } else {
                    error.insertAfter(element);
                }
            }
        })
        console.clear();
        const ARTICLES_PRIX_DICT = JSON.parse('@Html.Raw(articlePrixDictJSON)');
        console.log(ARTICLES_PRIX_DICT);
        const CommandeADistance = true;
        let UserSolde = 0;
        function updateTotalPrice(showMessage = false) {

            var totalPrice = 0;
            for (const [id, price] of Object.entries(ARTICLES_PRIX_DICT)) {
                //   console.log(key, value);
                var $quantite = $("#quantite_" + id)
                var q = $quantite.length > 0 ? $quantite.val() : 0
                totalPrice += q * price;
                $("#prixTotal_" + id).text(q * price);
            }

            $("#totalPrice").text(`${totalPrice} XOF`);
            return totalPrice;
        }


        $(function () {
             const ARTICLES_IDS = Object.keys(ARTICLES_PRIX_DICT)
            var len = ARTICLES_IDS.length;
            loadImageSuccessHandler = (res) => {
                if (res != null) {
                    var imageId = res.id
                    $(`#imageArticle_${imageId}`).attr("src", `data:image/png;base64,${res.image}`);
                }

            }
            function doSetTimeout(i) {
                var id = ARTICLES_IDS[i]
                setTimeout(function () {
                    console.log("images = ", id)
                    ajaxManager('GET', '/Article/GetArticleImage?id=' + id, loadImageSuccessHandler, (err) => { });
                }, 10);
            }

            for (var i = 0; i < len; i++) {

                doSetTimeout(i);
            }

            $("#PaymentMethodId").on("change", function () {

                checkSolde = $(this).find("option:selected").data("code") == "QRCODE";
                console.log("checkSolde = ", checkSolde)
                if (!checkSolde) {
                    $("#btnCommand").prop("disabled", false);
                    $("#solde").removeClass("text-warning text-danger text-success").addClass("text-success");
                    $("#messageSolde").text("");
                } else {
                    updateTotalPrice();

                }

            });


            $(".deleteArticleCart").off("click").on("click", function () {
                var id = $(this).data("articleid")
                if (id > 0) {
                    var successHandler = (data) => {

                        if (data == undefined || data == null || data == "")
                            ToastR("Une erreur a été rencontrée", "error", 10);
                        else {

                            if (data.success) {
                                delete ARTICLES_PRIX_DICT[id]
                                $("#row_" + id).remove();
                                $("#line_" + id).remove();
                                $("#cartBadge").text(data.object);
                                $("#cartBadge").show();
                                $("#cartBadgeFloat").show();
                                $("#cartBadgeFloatClear").show();
                                $("#cartBadgeFloatCount").text(data.object)

                                updateTotalPrice();
                                console.log(ARTICLES_PRIX_DICT)
                                $("#selectedArticlesCount").text(Object.keys(ARTICLES_PRIX_DICT).length)
                            }

                            else {

                                ToastR(data.message, "error", 10);

                            }

                        }

                    };
                    var errorHandler = (err) => {

                        ToastR("La suppréssion a échoué", "error", 10);
                    };

                    ajaxManager("DELETE", "/Home/DeleteArticleCart", successHandler, errorHandler, { id: id })
                }
            }
            );
            $("#btnCommand").off().on("click", function (e) {
                var btn = $(this);
                if ($("#formBooking").valid()) {
                    btn.prop("disabled", true);
                    var postData = {

                        EmplacementId: $("#EmplacementId").val(),
                        PaymentMethodId: $("#PaymentMethodId").val(),
                    }


                    var lignesCommandes = [];
                    for (const [id, price] of Object.entries(ARTICLES_PRIX_DICT)) {

                        var $quantite = $("#quantite_" + id)
                        var q = $quantite.length > 0 ? $quantite.val() : 0;
                        lignesCommandes.push({ ArticleId: id, Quantite: q, PrixTotal: q * price })

                    }
                    if (lignesCommandes.length == 0) {
                        ToastR("Aucune ligne de commande n'est trouvée", "error", 5);
                        btn.prop("disabled", false);
                        return;
                    }
                    postData["LigneCommands"] = lignesCommandes;
                    postData["CommandeADistance"] = true;
                    postData["UserId"] = UserId;
                    postData["Comment"] = $.trim($("#Comment").val());
                    console.log(postData);


                    try {
                        var successHandler = (data) => {
                            console.log("res= " + JSON.stringify(data));

                            endLoadingById("body");
                            if (data == undefined || data == null || data == "")
                                ToastR("Une erreur a été rencontrée", "error", 10);
                            else {

                                if (data.success) {
                                    sendDataCommand("@username", JSON.stringify(data.object))
                                    $("#cartBadge").hide();
                                    $("#cartBadgeFloat").hide();
                                    $("#cartBadgeFloatClear").hide();
                                    $("#cartBadge").text("0");
                                    $("#cartBadgeFloatCount").text("0");
                                    ToastR(data.message, "success", 10);
                                    setTimeout(function () {
                                        window.location = window.location.origin + "/Commande/MyCommands";
                                    }, 3000);
                                }

                                else {
                                    btn.prop("disabled", false);
                                    ToastR(data.message, "error", 10);
                                }

                            }

                        };
                        var errorHandler = (err) => {
                            btn.prop("disabled", false);
                            ToastR("Une erreur inattendue a été rencontrée", "error", 15);
                        }

                        ajaxManager("POST", "/Commande/CreateCommande", successHandler, errorHandler, postData);


                    } catch (e) {
                        console.log("Error : " + e);
                    }
                    finally {
                    }

                }

            });
            var successHandler = (res) => {

                if (!res.success) {

                    if (!res.data) {
                        ToastR("Utisateur introuvable", "error", 10);
                    }
                }

                else {

                    var user = res.data;

                    var totalPrice = @montantTotal;
                    if (user) {
                        $("#userId").val(user.id);
                        $("#solde").text(`${user.solde} XOF`);
                        $("#soldeRestant").val(user.solde);

                    } else {
                        return;
                    }
                }

            };
            var errorHandler = (err) => {

                ToastR("La suppréssion a échoué", "error", 10);
            };

            ajaxManager("GET", "/User/GetCurrentUser", successHandler, errorHandler, {})

        })


    </script>
                        }