@using AutoMapper;
@using CantineBack.Models
@using CantineFront.Helpers;
@using Newtonsoft.Json;
@inject IHttpContextAccessor Accessor
@inject IMapper mapper;
@{

    var articlesInCart = Accessor.HttpContext?.Session.GetListObjectFromSession<Article>("ArticlesCart") ?? new List<Article>();
    var emplacements = Accessor.HttpContext?.Session.GetListObjectFromSession<Emplacement>("Emplacements") ?? new List<Emplacement>();
    var paymentMethods = Accessor.HttpContext?.Session.GetListObjectFromSession<PaymentMethod>("PaymentMethods") ?? new List<PaymentMethod>();
    PaymentMethod cashPay = paymentMethods.FirstOrDefault(p => p.Code == "CASH");
    PaymentMethod qrCodePay = paymentMethods.FirstOrDefault(p => p.Code == "QRCODE");
    PaymentMethod wavePay = paymentMethods.FirstOrDefault(p => p.Code == "WAVE");
    PaymentMethod omPay = paymentMethods.FirstOrDefault(p => p.Code == "OM");
    IDictionary<int, int> articlePrixDict = new Dictionary<int, int>();
    IDictionary<int, string> articlesImages = new Dictionary<int, string>();
    var selectedArticles = articlesInCart.GroupBy(d => d.Id)
                              .Select(
                                  g =>
                                  {

                                      var a = new ArticleBooking
                                              {
                                                  Id = g.Key,
                                                  Quantite = g.Sum(s => 1),
                                              };
                                      a = mapper.Map<ArticleBooking>(g.First());
                                      a.Quantite = g.Sum(s => 1);
                                      articlePrixDict[a.Id] = a.PrixDeVente;
                                      articlesImages[a.Id] = a.Image;
                                      return a;
                                  }

                              ).ToList();
    int montantTotal = 0;
    if (selectedArticles != null)
    {
        foreach (var item in selectedArticles)
        {
            montantTotal += item.PrixDeVente * item.Quantite;
        }

    }


    var articlePrixDictJSON = JsonConvert.SerializeObject(articlePrixDict);
    var articleImagesJSON = JsonConvert.SerializeObject(articlesImages);
}
@section Styles{


    <style>

        .btn-link .btn-link:hover {
            background-color: transparent;
        }

        input[type=number] {
            min-width: 50px;
        }

        .radio-inputs {
            display: flex;
            justify-content: center;
            align-items: center;
            max-width: 350px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

            .radio-inputs > * {
                margin: 6px;
            }

        .radio-input:checked + .radio-tile {
            border-color: #ffbe33;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
            color: #ffbe33;
        }

            .radio-input:checked + .radio-tile:before {
                transform: scale(1);
                opacity: 1;
                background-color: #ffbe33;
                border-color: #ffbe33;
            }

            .radio-input:checked + .radio-tile .radio-icon svg {
                fill: #ffbe33;
            }

            .radio-input:checked + .radio-tile .radio-label {
                color: #ffbe33;
            }

        .radio-input:focus + .radio-tile {
            border-color: #ffbe33;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1), 0 0 0 4px #b5c9fc;
        }

            .radio-input:focus + .radio-tile:before {
                transform: scale(1);
                opacity: 1;
            }

        .radio-tile {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 80px;
            min-height: 80px;
            border-radius: 0.5rem;
            border: 2px solid #b5bfd9;
            background-color: #fff;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
            transition: 0.15s ease;
            cursor: pointer;
            position: relative;
        }

            .radio-tile:before {
                content: "";
                position: absolute;
                display: block;
                width: 0.75rem;
                height: 0.75rem;
                border: 2px solid #b5bfd9;
                background-color: #fff;
                border-radius: 50%;
                top: 0.25rem;
                left: 0.25rem;
                opacity: 0;
                transform: scale(0);
                transition: 0.25s ease;
            }

            .radio-tile:hover {
                border-color: #ffbe33;
            }

                .radio-tile:hover:before {
                    transform: scale(1);
                    opacity: 1;
                }

        .radio-icon svg {
            width: 2rem;
            height: 2rem;
            fill: #494949;
        }

        .radio-label {
            color: #707070;
            transition: 0.375s ease;
            text-align: center;
            font-size: 13px;
        }

        .radio-input {
            clip: rect(0 0 0 0);
            -webkit-clip-path: inset(100%);
            clip-path: inset(100%);
            height: 1px;
            overflow: hidden;
            position: absolute;
            white-space: nowrap;
            width: 1px;
        }

    </style>
}
<!-- book section -->
<section class="book_section layout_padding">
    <div class="container-fluid px-5">
        @*<div class="heading_container">
        <h2>
        Book A Table
        </h2>
        </div>*@

        <div class="">
            <form action="" id="formBooking">

                <div class="row d-flex justify-content-center align-items-center h-100">
                    <div class="col-12">
                        <div class="card card-registration card-registration-2" style="border-radius: 15px;min-height:500px">
                            <div class="card-body p-0">
                                <div class="row g-0">
                                    <div class="col-lg-8">
                                        <div class="p-5">
                                            <div class="d-flex justify-content-between align-items-center mb-5">
                                                <h1 class="fw-bold mb-0 text-black">Panier de commande</h1>
                                                <h6 class="mb-0 text-muted"><span id="selectedArticlesCount">@selectedArticles.Count</span> article(s)</h6>
                                            </div>

                                            @foreach (var item in selectedArticles)
                                            {
                                                <hr class="my-4" id="line_@item.Id">

                                                <div class="row mb-4 d-flex justify-content-between align-items-center" id="row_@item.Id">
                                                    <div class="col-md-2 col-lg-2 col-xl-2">
                                                        <img id="imageArticle_@item.Id" src="data:image/png;base64,@item.Image" class="zoom rounded-circle" width="50" height="50" onerror="this.src='/images/default.png';">
                                                        @* <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-shopping-carts/img5.webp"
                                                    class="img-fluid rounded-3" alt="Cotton T-shirt">*@
                                                    </div>
                                                    <div class="col-md-3 col-lg-3 col-xl-3">
                                                        <h6 class="text-muted">@item.Categorie?.Name</h6>
                                                        <h6 class="text-black mb-0">@item.Title</h6>
                                                    </div>
                                                    <div class="col-md-3 col-lg-2 col-xl-2 d-flex">
                                                        <button class="btn btn-link px-2 text-muted" type="button"
                                                                onclick="this.parentNode.querySelector('input[type=number]').stepDown();updateTotalPrice()">
                                                            <i class="fa fa-minus"></i>
                                                        </button>

                                                        <input id="quantite_@item.Id" min="0" name="Quantite" value="@item.Quantite" type="number" onchange="updateTotalPrice()"
                                                               class="form-control form-control-sm" />

                                                        <button class="btn btn-link px-2 text-muted" type="button"
                                                                onclick="this.parentNode.querySelector('input[type=number]').stepUp();updateTotalPrice()">
                                                            <i class="fa fa-plus"></i>
                                                        </button>
                                                    </div>
                                                    <div class="col-md-4 col-lg-3 col-xl-3 ">
                                                        <h7 class="mb-0  " style="font-size:0.8rem">@item.Quantite * @item.PrixDeVente = <span id="prixTotal_@item.Id">@(item.Quantite * item.PrixDeVente)</span> XOF</h7>
                                                    </div>
                                                    <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                                        <a href="#!" class="text-muted deleteArticleCart" data-articleid="@item.Id"><i class="fa fa-times"></i></a>
                                                    </div>
                                                </div>
                                            }

                                            <div class="col-12 ">
                                                <label class="mb-3">Commentaire </label>
                                                <textarea class="form-control   wide" name="Comment" id="Comment"></textarea>


                                            </div>



                                            <hr class="my-4">

                                            <div class="pt-5">
                                                <h6 class="mb-0">
                                                    <a href="/Home/Menu" class="text-body">
                                                        <i class="fa fa-arrow-left me-2"></i>Retour à la boutique
                                                    </a>
                                                </h6>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 bg-grey">
                                        <div class="p-5">
                                            <h3 class="fw-bold mb-5 mt-2 pt-1">Résumé</h3>
                                            <hr class="my-4">

                                            <div class="mb-4 pb-2 ">
                                                <label class="mb-3">Méthode de paiement</label>
                                                <div class="radio-inputs">
                                                    <label>
                                                        <input class="radio-input" type="radio" name="PaymentMethodId" value="@(cashPay?.Id??1)" id="cashPay" checked data-code="@(cashPay?.Code??"CASH")">
                                                        <span class="radio-tile">
                                                            <span class="radio-icon">
                                                                <i class="fa fa-money"></i>
                                                            </span>
                                                            <span class="radio-label font-weight-bold">CASH</span>
                                                        </span>
                                                    </label>
                                                    <label>
                                                        <input class="radio-input" type="radio" name="PaymentMethodId" value="@(qrCodePay?.Id??2)" id="qrCodePay" data-code="@(qrCodePay?.Code??"QRCODE")">
                                                        <span class="radio-tile">
                                                            <span class="radio-icon">
                                                                <i class="fa fa-qrcode"></i>
                                                            </span>
                                                            <span class="radio-label font-weight-bold">SOLDE</span>
                                                        </span>
                                                    </label>
                                                    <label>
                                                        <input class="radio-input" type="radio" name="PaymentMethodId" value="@(wavePay?.Id??3)" id="wavePay" data-code="@(wavePay?.Code ?? "WAVE")">
                                                        <span class="radio-tile">
                                                            <span class="radio-icon">
                                                                @*<i class="fa fa-qrcode"></i>*@
                                                                <img src="~/images/wave.png" width="40" height="40" />
                                                            </span>
                                                            <span class="radio-label font-weight-bold">WAVE</span>
                                                        </span>
                                                    </label>
                                                    <label>
                                                        <input class="radio-input" type="radio" name="PaymentMethodId" value="@(omPay?.Id??4)" id="wavePay" data-code="@(omPay?.Code ?? "OM")">
                                                        <span class="radio-tile">
                                                            <span class="radio-icon">
                                                             @*   <i class="fa fa-qrcode"></i>*@
                                                                <img src="~/images/orangemoney.png" width="40" height="40" />
                                                            </span>
                                                            <span class="radio-label font-weight-bold">OM</span>
                                                        </span>
                                                    </label>
                                                </div>
                                                <div class="my-2" id="scanLoading" style="display:none">
                                                    <div class="spinner-border" role="status">
                                                        <span class="sr-only">Loading...</span>
                                                    </div>
                                                    Scannez votre QR CODE
                                                </div>
                                               
                                               @* <select class="form-control   wide" required name="PaymentMethodId" id="PaymentMethodId">

                                                    @foreach (var pm in paymentMethods)
                                                    {

                                                        <option selected='@pm.Code=="QRCODE"' data-code="@pm.Code" value="@pm.Id">@pm.Name</option>
                                                    }

                                                </select>*@
                                            </div>
                                            <input class="form-control" name="QrCode" id="qrCode" style="opacity: 0; position: absolute; top: 0; left: 0" />
                                            <div class="mb-4 pb-2 " style="display:none" id="qrCodeDiv">
                                                <label class="mb-3">QR Code</label>

                                             @*   <input class="form-control" name="QrCode" id="qrCode" style="opacity: 0; position: absolute; top: 0; left: 0" />*@
                                            </div>
                                            <input type="hidden" id="soldeRestant" />
                                            <div class=" justify-content-between mb-5" style="display:none" id="clientDiv">
                                                <h6 class="text-uppercase" >Client</h6>
                                                <h6 id="client">  </h6>
                                            </div>

                                            <div class="justify-content-between mb-5 text-warning" style="display:none" id="soldeDiv">
                                                <h6 class="text-uppercase ">Solde</h6>
                                                <h6 id="solde">  XOF</h6>
                                            </div>
                                            <span class="text-danger" id="messageSolde" style=""></span>



                                            <hr class="my-4">
                                            <div class="d-flex justify-content-between mb-5">
                                                <h5 class="text-uppercase">Prix Total</h5>
                                                <h5 id="totalPrice"> @montantTotal XOF</h5>
                                            </div>

                                            <button type="button" class="btn btn-dark btn-block btn-lg" id="btnCommand" style="font-size:14px"
                                                    data-mdb-ripple-color="dark">
                                                Soumettre la commande
                                            </button>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>





            </form>
        </div>


    </div>
</section>
<!-- end book section -->
@section Scripts {



    <script>
        const CommandeADistance = false;
        let userSolde = 0;
        let setUserSolde = false;
        let checkSolde = true;


        $("#formBooking").validate({
            rules: {
                "EmplacementId": { required: true },
                "Quantite": { required: true, min: 1 },
            },
            messages: {
                "Quantite": { min: "La quantité doit être supérieure ou égale à 1." },
            },
            feedbackIcons: {
                valid: 'fa fa-check',
                invalid: 'fa fa-remove',
                validating: 'fa fa-refresh'
            },
            errorClass: "error fail-alert",
            validClass: "valid success-alert",
            errorPlacement: function (error, element) {
                var placement = $(element).data('error');
                if ($(element).attr("name") == "Quantite") {

                    error.insertAfter(element.closest("[id^='row_']"));
                }

                else if (placement) {

                    console.log(placement.classNames)
                    $(placement).append(error)
                } else {
                    error.insertAfter(element);
                }
            }
        })
        console.clear();
        const ARTICLES_PRIX_DICT = JSON.parse('@Html.Raw(articlePrixDictJSON)');
        var articleImages = JSON.parse('@Html.Raw(articleImagesJSON)');
        console.log(articleImages)



        console.log(ARTICLES_PRIX_DICT);


        function updateTotalPrice(showMessage = true) {

            var totalPrice = 0;
            for (const [id, price] of Object.entries(ARTICLES_PRIX_DICT)) {
                //   console.log(key, value);
                var $quantite = $("#quantite_" + id)
                var q = $quantite.length > 0 ? $quantite.val() : 0
                totalPrice += q * price;
                $("#prixTotal_" + id).text(q * price);
            }

            $("#totalPrice").text(`${totalPrice} XOF`);
            if (setUserSolde) {
                if (totalPrice > userSolde) {
                    $("#solde").removeClass("text-warning text-danger text-success").addClass("text-danger");
                    if (showMessage) {
                        ToastR("Le montant total est supérieur à ton solde", "error", 10, "toast-bottom-right");
                        $("#messageSolde").text("Solde insuffisant.");
                    }

                    $("#btnCommand").prop("disabled", true);
                } else {
                    $("#btnCommand").prop("disabled", false);
                    $("#solde").removeClass("text-warning text-danger text-success").addClass("text-success");
                    $("#messageSolde").text("");
                }

            }

            return totalPrice;
        }

        $(function () {
            try {
                const ARTICLES_IDS = Object.keys(ARTICLES_PRIX_DICT)
                var len = ARTICLES_IDS.length
                loadImageSuccessHandler = (res) => {
                    // console.log("images = ",res.id)
                    if (res != null) {
                        var imageId = res.id
                        $(`#imageArticle_${imageId}`).attr("src", `data:image/png;base64,${res.image}`);
                    }

                }
                function doSetTimeout(i) {
                    var id = ARTICLES_IDS[i]
                    setTimeout(function () {
                        console.log("images = ", id)
                        ajaxManager('GET', '/Article/GetArticleImage?id=' + id, loadImageSuccessHandler, (err) => { });
                    }, 10);
                }

                for (var i = 0; i < len; i++) {

                    doSetTimeout(i);
                }
            }
            catch {


            }





            $("#PaymentMethodId").on("change", function () {

                checkSolde = $(this).find("option:selected").data("code") == "QRCODE";
                console.log("checkSolde = ", checkSolde)

                if (!checkSolde) {
                    $("#btnCommand").prop("disabled", false);
                    $("#solde").removeClass("text-warning text-danger text-success").addClass("text-success");
                    $("#messageSolde").text("");
                } else {
                    let montantTotal = updateTotalPrice(false);
                    if (montantTotal > userSolde) {
                        $("#solde").removeClass("text-warning text-danger text-success").addClass("text-danger");
                        ToastR("Le montant total est supérieur à ton solde", "error", 10, "toast-bottom-right");
                        $("#messageSolde").text("Solde insuffisant.");
                        $("#btnCommand").prop("disabled", true);
                    } else {
                        $("#btnCommand").prop("disabled", false);
                        $("#solde").removeClass("text-warning text-danger text-success").addClass("text-success");
                        $("#messageSolde").text("");
                    }
                }
            });


            var getUserSuccessHandler = (res) => {
                if (res) {
                    if (res.success) {
                        $('#scanLoading').hide();
                        let user = res.data;
                        if (user) {
                            $("#userId").val(user.id);
                            $("#solde").text(`${user.solde} XOF`);
                            $("#soldeRestant").val(user.solde);
                            userSolde = user.solde;
                            setUserSolde = true;
                            $("#client").text(user.prenom + " " + user.nom);

                        } else {
                            ToastR("Utilisateur introuvable ", "error", 10, "toast-bottom-right");
                            return;
                        }
                        let montantTotal = updateTotalPrice(false);
                        if (checkSolde) {
                            if (montantTotal > user.solde) {
                                $("#solde").removeClass("text-warning text-danger text-success").addClass("text-danger");
                                ToastR("Le montant total est supérieur à ton solde", "error", 10, "toast-bottom-right");
                                $("#messageSolde").text("Solde insuffisant.");
                                $("#btnCommand").prop("disabled", true);
                            } else {
                                $("#btnCommand").prop("disabled", false);
                                $("#solde").removeClass("text-warning text-danger text-success").addClass("text-success");
                                $("#messageSolde").text("");
                            }
                        } else {


                            $("#btnCommand").prop("disabled", false);
                            $("#solde").removeClass("text-warning text-danger text-success").addClass("text-success");
                            $("#messageSolde").text("");
                        }



                    } else {

                        ToastR("Utilisateur introuvable ", "error", 10, "toast-bottom-right");
                    }

                } else {
                    ToastR("Utilisateur introuvable ", "error", 10, "toast-bottom-right");
                }

            }
            $("#qrCode").on("change", function () {

            //    console.log("result scan  =  ", this.value)
              if(this.value){
                  if(this.value.length>24){
                        this.value = this.value.trim().substring(0, 24);
                        return;
                  }
              }

                if ($("#qrCodePay").is(":checked")){
                    setTimeout(function () {
                        let val = $("#qrCode").val();

                        if (val && typeof val === "string") {

                            // alert( "Bon")

                            if (val.length = 24) {
                                ajaxManager("GET", "/User/GetUserByQrCode", getUserSuccessHandler, errorHandler, { qrCode: val })
                            }


                        }

                    }, 1000);

                }

     

            });

            $(".deleteArticleCart").off("click").on("click", function () {
                var id = $(this).data("articleid")
                if (id > 0) {
                    var successHandler = (data) => {

                        if (data == undefined || data == null || data == "")
                            ToastR("Une erreur a été rencontrée", "error", 10);
                        else {

                            if (data.success) {
                                delete ARTICLES_PRIX_DICT[id]
                                $("#row_" + id).remove();
                                $("#line_" + id).remove();
                                $("#cartBadge").text(data.object);
                                $("#cartBadge").show();
                                $("#cartBadgeFloat").show();
                                $("#cartBadgeFloatClear").show();
                                $("#cartBadgeFloatCount").text(data.object)

                                updateTotalPrice();
                                // ToastR(data.message, "success", 10, "toast-bottom-right");
                                console.log(ARTICLES_PRIX_DICT)
                                $("#selectedArticlesCount").text(Object.keys(ARTICLES_PRIX_DICT).length)
                            }

                            else {

                                ToastR(data.message, "error", 10);

                            }

                        }

                    };
                    var errorHandler = (err) => {

                        ToastR("La suppréssion a échoué", "error", 10);
                    };

                    ajaxManager("DELETE", "/Home/DeleteArticleCart", successHandler, errorHandler, { id: id })
                }
            }
            );
            $("#btnCommand").off().on("click", function (e) {
                var btn = $(this);
                if ($("#formBooking").valid()) {
                    btn.prop("disabled", true);
                    var postData = {

                        EmplacementId: $("#EmplacementId").val(),
                        PaymentMethodId: $("input[type='radio'][name='PaymentMethodId']:checked").val(),
                        PaymentMethodeCode: $("input[type='radio'][name='PaymentMethodId']:checked").data("code")
                        //PaymentMethodId: $("#PaymentMethodId").val(),
                        //PaymentMethodeCode: $("#PaymentMethodId option:selected").data("code")
                    }


                    var lignesCommandes = [];

                    for (const [id, price] of Object.entries(ARTICLES_PRIX_DICT)) {

                        var $quantite = $("#quantite_" + id)
                        var q = $quantite.length > 0 ? $quantite.val() : 0;
                        lignesCommandes.push({ ArticleId: id, Quantite: q, PrixTotal: q * price })

                    }
                    if (lignesCommandes.length == 0) {
                        ToastR("Aucune ligne de commande n'est trouvée", "error", 5);
                        btn.prop("disabled", false);
                        return;
                    }
                    postData["LigneCommands"] = lignesCommandes;
                    console.log(postData);
                    postData["Comment"] = $.trim($("#Comment").val());

                    try {
                        var successHandler = (data) => {
                            //console.log("res= " + JSON.stringify(data));

                            endLoadingById("body");
                            if (data == undefined || data == null || data == "")
                                ToastR("Une erreur a été rencontrée", "error", 10);
                            else {

                                if (data.success) {
                                    if(isGerant || isAdmin){
                                        ToastR("Commande enregistrée avec succès!", "success", 10, "toast-bottom-right");
                                       
                                            setTimeout(() => { window.location = window.location.origin + "/Home/Menu"; }, 3000)
                                       
                                    }else{
                                        ToastR("Commande envoyée avec succès!", "success", 10, "toast-bottom-right");
                                        sendDataCommand("shop", JSON.stringify(data.object)).then(() => {
                                            setTimeout(() => { window.location = window.location.origin + "/Home/Menu"; }, 3000)
                                            //  location.reload();
                                        });
                                    }
                            

                                }

                                else {
                                    btn.prop("disabled", false);
                                    ToastR(data.message, "error", 10);
                                }

                            }

                        };
                        var errorHandler = (err) => {
                            btn.prop("disabled", false);
                            ToastR("Une erreur inattendue a été rencontrée", "error", 15);
                        }
                        setUserSolde = false;
                        userSolde = 0;
                        //     sendDataCommand("shop", postData)
                        if (isGerant || isAdmin) {
                            ajaxManager("POST", "/Commande/CreateCommandeByPartner", successHandler, errorHandler, { QrCode: $("#qrCode").val(), ...postData });
                        }else{
                            ajaxManager("POST", "/Commande/PostLocalCommande", successHandler, errorHandler, { QrCode: $("#qrCode").val(), ...postData });
                        }
                      
                      
                        //ajaxManager("POST", "/Commande/CreateCommande", successHandler, errorHandler, postData);


                    } catch (e) {
                        console.log("Error : " + e);
                    }
                    finally {



                    }

                }

            });


            $("#cashPay, #qrCodePay, #wavePay, #omPay").change(function () {
                if ($("#cashPay").is(":checked") || $("#wavePay").is(":checked") || $("#omPay").is(":checked")) {
                    $('#scanLoading').hide();
                    $('#clientDiv').removeClass("d-flex").hide();
                    $('#soldeDiv').removeClass("d-flex").hide();
                    $("#messageSolde").text("").hide();
                 //   $("#qrCodeDiv").hide()
                    $("#qrCode").val("")
                }
                else if ($("#qrCodePay").is(":checked")) {
                    $('#scanLoading').show();
                    $('#clientDiv').addClass("d-flex").show();
                    $('#soldeDiv').addClass("d-flex").show();
                   //TR2jPASFe1X8qyOrnCRLWA==
                   //  $("#qrCodeDiv").show()
                    $("#qrCode").focus()
                }
               
            });

        });


    </script>
                        }