@section Styles {
    <link href="~/css/starrating.css" rel="stylesheet" />
    <style>
        /* Styles pour les contrôles DataTable */
        table.dataTable.dtr-inline > tbody > tr > td span.dt-custom-control-plus:before,
        table.dataTable.dtr-inline.collapsed > tbody > tr > th.dt-custom-control:before {
            height: 1em;
            width: 1em;
            position: relative;
            color: white;
            border: 0.15em solid white;
            border-radius: 1em;
            box-shadow: 0 0 0.2em #444;
            box-sizing: content-box;
            text-align: center;
            text-indent: 0 !important;
            font-family: "Courier New",Courier,monospace;
            content: "+";
            background-color: #31b131;
        }

        table.dataTable.dtr-inline > tbody > tr > td span.dt-custom-control-plus.haschild:before,
        table.dataTable > tbody > tr.second-child > td span.dt-custom-control-plus:before {
            content: "-";
            background-color: #d33333;
        }

        tr table.childtable tr td, table.childtable thead tr th {
            background-color: #c6dcf5 !important;
        }

        /* Design compact et professionnel */
        .reports-container {
            background: #ffffff;
            padding: 20px;
            border-radius: 6px;
            box-shadow: 0 1px 5px rgba(0,0,0,0.05);
        }


        .page-title {
            color: #2c3e50;
            font-weight: 600;
            font-size: 1.5rem;
            margin: 0;
        }

        .page-subtitle {
            color: #6c757d;
            font-size: 0.9rem;
            margin-top: 2px;
        }

        /* Filtres compacts */
        .filter-section {
            background: #f8f9fa;
            border-radius: 4px;
            padding: 15px;
            margin-bottom: 15px;
            border: 1px solid #e9ecef;
        }

        .filter-title {
            color: #495057;
            font-weight: 600;
            font-size: 1rem;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .form-label {
            font-weight: 500;
            color: #495057;
            font-size: 0.85rem;
            margin-bottom: 3px;
        }

        .form-control {
            border: 1px solid #ced4da;
            border-radius: 3px;
            font-size: 0.85rem;
            padding: 6px 10px;
            height: 36px;
        }

            .form-control:focus {
                border-color: #2c5aa0;
                box-shadow: 0 0 0 2px rgba(44, 90, 160, 0.1);
            }

        .btn-primary {
            background-color: #2c5aa0;
            border-color: #2c5aa0;
            border-radius: 3px;
            padding: 6px 15px;
            font-weight: 500;
            font-size: 0.85rem;
            height: 36px;
        }

            .btn-primary:hover {
                background-color: #1e3d6f;
                border-color: #1e3d6f;
            }

        /* Tableau compact */
        .table-container {
            background: #ffffff;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            overflow: hidden;
            margin-top: 10px;
        }

        #tbCommandes {
            width: 100% !important;
            margin: 0;
            font-size: 0.85rem;
        }

            #tbCommandes thead th {
                background-color: #f8f9fa;
                color: #495057;
                font-weight: 600;
                padding: 8px 12px;
                border-bottom: 1px solid #e9ecef;
                font-size: 0.8rem;
                text-transform: uppercase;
                letter-spacing: 0.3px;
            }

            #tbCommandes tbody td {
                padding: 8px 12px;
                border-bottom: 1px solid #f8f9fa;
                vertical-align: middle;
            }

            #tbCommandes tbody tr:hover {
                background-color: #f8f9fa;
            }

        /* Badges de statut compacts */
        .status-badge {
            padding: 3px 6px;
            border-radius: 10px;
            font-size: 0.7rem;
            font-weight: 500;
        }

        .status-delivered {
            background-color: #d4edda;
            color: #155724;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-cancelled {
            background-color: #f8d7da;
            color: #721c24;
        }

        /* Boutons d'action */
        .btn-action {
            padding: 4px 8px;
            font-size: 0.75rem;
            border-radius: 3px;
            border: 1px solid #dee2e6;
            background: white;
            transition: all 0.2s ease;
        }

            .btn-action:hover {
                background-color: #f8f9fa;
            }

        .btn-rate {
            color: #ffc107;
            border-color: #ffc107;
        }

        .btn-cancel {
            color: #dc3545;
            border-color: #dc3545;
        }

        .btn-details {
            color: #2c5aa0;
            border-color: #2c5aa0;
        }

        /* Réduction des espacements globaux */
        .container-fluid.py-5 {
            padding-top: 15px !important;
            padding-bottom: 15px !important;
        }

        .row {
            margin-bottom: 8px;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .reports-container

        {
            padding: 12px;
        }

        .page-title {
            font-size: 1.3rem;
        }

        .filter-section {
            padding: 10px;
        }

        }
    </style>
}

<div class="container-fluid py-2">
    <div class="reports-container">
        <!-- Filtres compacts -->
        <div class="filter-section">
            <div class="filter-title">
                <i class="fas fa-filter"></i>
                Filtres de période
            </div>
            <div class="row g-2">
                <div class="col-md-4">
                    <label for="startDate" class="form-label">Date de début</label>
                    <input max="@ViewBag.MaxDate" value="@ViewBag.StartDate" data-format="yyyy-MM-dd"
                           name="startDate" id="startDate" type="datetime-local"
                           class="form-control">
                </div>
                <div class="col-md-4">
                    <label for="endDate" class="form-label">Date de fin</label>
                    <input max="@ViewBag.MaxDate" value="@ViewBag.EndDate"
                           name="endDate" id="endDate" type="datetime-local"
                           class="form-control">
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="button" class="btn btn-primary w-100" id="btnFilter">
                        <i class="fas fa-check me-1"></i>Valider
                    </button>
                </div>
            </div>
        </div>

        <!-- Tableau compact -->
        <div class="table-container">
            <table class="table" id="tbCommandes">
                <thead>
                    <tr>
                        <th scope="col"></th>
                        <th scope="col">Montant</th>
                        <th scope="col">Paiement</th>
                        <th scope="col">Emplacement</th>
                        <th scope="col">Date</th>
                        <th scope="col">Statut</th>
                        <th scope="col">Noter</th>
                        <th scope="col">Annuler</th>
                        <th scope="col">Détails</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>


@section Scripts{

    <script type="text/javascript">
        function loadData(dataRequest) {

            var successHandler = function (res) {
                //  console.log(JSON.stringify(res))
                if (res) {

                    if (res.success) {
                        try {
                            $('#tbCommandes').dataTable().fnDestroy();
                            $('#tbCommandes').DataTable().clear().draw();
                        }
                        catch {

                        }


                        $.fn.dataTable.moment("DD/MM/YYYY HH:mm");
                        var table = $('#tbCommandes').DataTable({
                            data: res.data,
                            responsive: true,
                            order: [[6, "desc"]],
                            destroy: true,

                            columns: [
                                {
                                    data: null,
                                    width: '1%',
                                    defaultContent: ''


                                },

                                {
                                    width: '5%',
                                    data: 'montant',
                                    defaultContent: '',
                                }
                                ,
                                {

                                    data: "paymentMethodNavigation",
                                    width: '8%',
                                    defaultContent: "",
                                    render: function (data, type, row) {

                                        if (data == null) {
                                            return "";
                                        }
                                        return data.name
                                    }
                                },
                                {

                                    data: "emplacementNavigation",
                                    width: '10%',
                                    defaultContent: "",
                                    render: function (data, type, row) {

                                        if (data == null) {
                                            return "";
                                        }
                                        return data.name
                                    }
                                }
                                ,
                                {

                                    data: "date",
                                    width: '10%',
                                    defaultContent: "",
                                    render: function (data, type, row) {

                                        if (data == null) {
                                            return "";
                                        }
                                        var date = moment(data).format("DD/MM/YYYY HH:mm");

                                        return date;
                                    }
                                }
                                ,

                                {

                                    data: "isDelivered",
                                    width: '10%',
                                    defaultContent: "",
                                    render: function (data, type, row, meta) {
                                        if(row.isRejected==true){
                                         return   `<span class="badge badge-danger"> rejetée</span>

                                                            <button type="button" data-method="GET"
                                                                                                         data-modaltitle="Motif du rejet"
                                                                                                                  data-modalbody="${row.rejectComment}"
                                                                                                         data-toggle="modal"
                                                                                                          data-target="#genericModal" rel="tooltip"
                                                                                                        class="btn btn-primary btn-sm m-2" data-original-title="" title="">
                                                                                                    Motif
                                                             </button>
                                            `;
                                        }
                                        
                                        if (data == true) {
                                    


                                            return `<span class="badge badge-success"> livrée</span> ` ;
                                        }else{
                                              return `<span class="badge badge-primary">attente...</span>`
                                        }




                                    }


                                }
                                ,

                                {

                                    data: "isRating",
                                    width: '10%',
                                    defaultContent: "",
                                    render: function (data, type, row, meta) {
                                        if (row.isDelivered == true && row.isRejected == false) {

                                            if(data==true){
                                               var checked5=row.rate==5?"checked":"";
                                               var checked4=row.rate==4?"checked":"";
                                               var checked3=row.rate==3?"checked":"";
                                               var checked2=row.rate==2?"checked":"";
                                               var checked1=row.rate==1?"checked":"";

                                               console.log("checked5 = ",checked5)
                                               console.log("checked4 = ",checked4)
                                               console.log("checked3 = ",checked3)
                                               console.log("checked2 = ",checked2)
                                               console.log("checked1 = ",checked1)
                                                return `                            <div class='rating' disabled style="max-width:50px;">
                                                                                      <input type='radio' name='rating${row.id}' ${checked5} value='5' id='5ll${row.id}'><label for='5ll${row.id}' style='font-size:1vw;'>☆</label>
                                                                                      <input type='radio' name='rating${row.id}' ${checked4} value='4' id='4ll${row.id}'><label for='4ll${row.id}' style='font-size:1vw;'>☆</label>
                                                                                      <input type='radio' name='rating${row.id}' ${checked3} value='3' id='3ll${row.id}'><label for='3ll${row.id}' style='font-size:1vw;'>☆</label>
                                                                                      <input type='radio' name='rating${row.id}' ${checked2} value='2' id='2ll${row.id}'><label for='2ll${row.id}' style='font-size:1vw;'>☆</label>
                                                                                      <input type='radio' name='rating${row.id}' ${checked1} value='1' id='1ll${row.id}'><label for='1ll${row.id}' style='font-size:1vw;'>☆</label>
                                                                                    </div>

                                                                    <button type="button" data-method="GET"
                                                                                                                 data-modaltitle="Commentaire"
                                                                                                                          data-modalbody="${row.customerFeedback}"
                                                                                                                 data-toggle="modal"
                                                                                                                  data-target="#genericModal" rel="tooltip"
                                                                                                                class="btn btn-primary btn-sm m-2" data-original-title="" title="">
                                                                                                            Avis et Note
                                                                     </button>
                                                    `;
                                            }else{

                                                var starRating = `
                                                                            <div class='rating'>

                                                                              <input type='radio' name='rating' value='5' id='5'><label for='5'>☆</label>
                                                                              <input type='radio' name='rating' value='4' id='4'><label for='4'>☆</label>
                                                                              <input type='radio' name='rating' value='3' id='3'><label for='3'>☆</label>
                                                                              <input type='radio' name='rating' value='2' id='2'><label for='2'>☆</label>
                                                                              <input type='radio' name='rating' value='1' id='1'><label for='1'>☆</label>
                                                                            </div>
                                                                    `
                                                btnReject = `
                                                                                                                                <button type="button" data-method="POST"
                                                                                                                                         data-modaltitle="Noter la prestation"
                                                                                                                                                         data-successhandler="feedbackSuccessHandler"
                                                                                                                                                 data-errorhandler="errorHandler"
                                                                                                                                                 data-callback="updateNoteCell"
                                                                                                                                                         data-forward="feedbackFormValid()"
                                                                                                                                                 data-getdata="getDataForm(${row.id})"
                                                                                                                                                                           data-modalbody=" <div class='mb-3'>${starRating} </div><div class='mb-3'><label> Commentaire</label><br><textarea class='form-control' name='Feedback' id='Feedback' ></textarea > </di>"
                                                                                                                                                                data-url="/Commande/FeedBack" data-toggle="modal"
                                                                                                                                                data-target="#genericModal" rel="tooltip"
                                                                                                                                                class="btn btn-warning btn-sm mx-2" data-original-title="" title="">
                                                                                                                                   Noter
                                                                                                                                </button>`;


                                                return btnReject;

                                            }
                        
                                        }

                                            return ""
                                        




                                    }


                                }
                                ,
                                {

                                    data: "ligneCommandesNavigation",
                                    width: '10%',
                                    defaultContent: "",
                               
                                    render: function (data, type, row, meta) {
                                        if (type === 'export') {

                                            return data;
                                        }
                                        var btnDelete = "";
                                        if (row.isDelivered == false) {
                                            btnDelete = `
                                                                <button type="button" data-method="DELETE"
                                                                                data-message=" Voulez-vous vraiment annuler la commande."
                                                                                data-url="/Commande/DeleteCommande/${row.id}" data-toggle="modal"
                                                                        data-target="#confirmModal" rel="tooltip"
                                                                        class="btn btn-danger btn-sm m-2" data-original-title="" title="">
                                                                    <span class="fa-remove  fa"></span> Annuler
                                                                </button>`;

                                        }
                                        return   btnDelete;


                                    }
                                }
                                ,
                                {

                                    data: "ligneCommandesNavigation",
                                    width: '10%',
                                    defaultContent: "",
                                    className: "dt-custom-control custom px-2",
                                    render: function (data, type, row, meta) {
                                        if (type === 'export') {

                                            return data;
                                        }
                                       
                                   
                                        return `<span class="dt-custom-control-plus"></span> <a> Détails</a> ` 


                                    }
                                }

                            ]
                            , "language": {
                                "zeroRecords": "Aucune donnée n'est disponible",
                                "lengthMenu": "Afficher _MENU_ éléments",
                                "info": "Affichage de l'élément _START_ à _END_ sur _TOTAL_ éléments",
                                "search": "Rechercher : ",
                                "oPaginate": {
                                    "sFirst": "Premier",
                                    "sLast": "Dernier",
                                    "sNext": "Suivant",
                                    "sPrevious": "Précédent"
                                },
                            }
                            ,
                            drawCallback: function (setting) {


                                $('[data-toggle="tooltip"]').tooltip();


                            },
                        });

                        function format(d) {
                            // `d` is the original data object for the row
                            if (!d.ligneCommandesNavigation) {

                                return;
                            }
                            var commentaire = d.comment;
                            commentaire = commentaire ? ` <div class="col-12 px-0 my-1 text-black text-center"><label class="mb-3 text-black fw-bold" style="font-size:11px;font-weight:bold">Commentaire: </label><p style="font-size:11px;" class="fw-bold ">${commentaire}</p></div>` : "";

                            let table = $(`<table cellpadding="5" class="childtable table table-bordered bg-gray" cellspacing="0" border="0" style="padding-left:50px;background-color:#c6dcf5;width:80%">
                                                                    <thead>

                                                                    <th scope="col" class="font-weight-bold text-left">Article</th>
                                                                    <th scope="col" class="font-weight-bold text-left">Quantité</th>
                                                                    <th scope="col" class="font-weight-bold text-left">Prix Total</th>

                                                                    </thead> </table>`);
                            table.DataTable({
                                data: d.ligneCommandesNavigation,
                                responsive: false,
                                destroy: true,
                                columns: [
                                    {

                                        data: "articleNavigation",
                                        width: '10%',
                                        defaultContent: "",
                                        render: function (data, type, row) {
                                            return data ? data.title : "";
                                        }
                                    }, {

                                        data: "quantite",
                                        width: '10%',
                                        defaultContent: "",

                                    },
                                    {

                                        data: "prixTotal",
                                        width: '10%',
                                        defaultContent: "",

                                    }

                                ]
                            });
                            var div = $(`<div class="" style="background-color:#c6dcf5;"></div>`)
                            div.append(commentaire)
                            div.append(table)
                            return div;
                            
                        }

                        $('#tbCommandes tbody').on('click', ".btnDelivery", function () {

                            var commandId = $(this).data("commandid");
                            if (!commandId || commandId <= 0) return;
                            var successHandler = (response) => {
                                if (response) {
                                    if (response.success) {


                                        $(this).replaceWith(`<span class="badge badge-success"> livré</span>`);


                                    }
                                }
                            }
                            ajaxManager("POST", "/Commande/Delivery", successHandler, errorHandler, { id: commandId });
                        });


                        $('#tbCommandes tbody').on('click', '.dt-custom-control.custom', function () {

                            try {



                                var tr = $(this).closest('tr');
                                var trChild = $(this).closest('tr.child');

                                var hasSecondChild = false;
                                var row;
                                if (trChild.length > 0) {
                                    //console.log("trChild ", trChild)
                                    //trChild = $(this).closest('tr.child');
                                    var tr = $(trChild[0]).prev('tr.dt-hasChild.parent');
                                    hasSecondChild = true;
                                    row = table.row(tr);
                                } else {
                                    row = table.row(tr);

                                }

                                console.log("row = ", row)
                                var rowData = row.data();
                                if (row != undefined && row != null) {

                                    if (!hasSecondChild) {
                                        if (row.child.isShown()) {
                                            // This row is already open - close it
                                            row.child.hide();
                                            tr.removeClass('dt-hasChild shown');
                                            $(this).find('span.dt-custom-control-plus').removeClass("haschild");
                                        }
                                        else {
                                            $(this).find('span.dt-custom-control-plus').addClass("haschild");


                                            // Open this row

                                            row.child(format(rowData)).show();
                                            tr.addClass('dt-hasChild shown');
                                        }
                                    } else {

                                        if (trChild.hasClass("second-child")) {
                                            trChild.find("table").remove();
                                            trChild.removeClass("second-child")
                                        } else {
                                            console.log("append", rowData)
                                            trChild.find("td.child").append(format(rowData));
                                            trChild.addClass("second-child")
                                        }
                                    }


                                }






                            } catch (e) {
                                console.log(e)
                            }




                        });

                    } else {

                        ToastR(res.message, res.status, 15);
                    }
                }



            }



            var errorHandler = (err) => {
                try {
                    $('#tbCommandes').dataTable().fnDestroy();
                    $('#tbCommandes').DataTable().clear().draw();
                }
                catch {

                }
                ToastR("Une erreur a été rencontré", "error", 15);
            }


            ajaxManager('GET', '/Commande/GetMyCommandes', successHandler, errorHandler, dataRequest);
        }

        $(function () {

            loadData();


            $("#btnFilter").off().on("click",
                function () {

                    var startDate = $("#startDate").val();

                    var endDate = $("#endDate").val();

                    if (!startDate) {
                        ToastR("Veuillez indiquer la date de début", "error", 5);
                        return;
                    }
                    if (!endDate) {
                        ToastR("Veuillez indiquer la date de fin", "error", 5);
                        return;
                    }
                    startDate = moment(startDate);
                    endDate = moment(endDate);
                    var dateDiff = monthDiff(startDate, endDate);
                    if (dateDiff < 0) {
                        ToastR("La date de fin doit être supérieure à la date de début.", "error", 5);
                        return;
                    }

                    if (dateDiff > 3) {
                        ToastR("La différence entre la date de fin et la date de début doit être inférieure ou égale à 3 mois.", "error", 5);
                        return;
                    }


                    var data = {

                        startDate: $("#startDate").val(),
                        endDate: $("#endDate").val()
                    }
                    console.log(data)
                    loadData(data);

                }

            );


        });
        function feedbackFormValid() {
            var rate = $("#genericModal").find("input[name='rating']:checked").val();
            var val = $("#genericModal").find("#Feedback").val();
           
            if (!rate) {

                ToastR("Veuillez donner une note !", "error", 10);
                return "return";
            }
            if (!val) {

                ToastR("Veuillez saisir un commentaire!", "error", 10);
                return "return";
            }
           
        }
        function getDataForm(id) {

            var formData = new FormData();
            formData.append("rate", $("#genericModal").find("input[name='rating']:checked").val());
            formData.append("Feedback", $("#genericModal").find("#Feedback").val());
            formData.append("commandId", id);

            console.log(" Data = ", formData)
           
            return formData;

        }
        function DeliveryCallback(btn, data) {



            $(btn).replaceWith(`<span class="badge badge-success"> livrée</span>`);

        }

        var feedbackSuccessHandler = (res) => {
            if (res) {
                let status = res.success ? "success" : "error"
                ToastR(res.message, status, 15);
            }

        }

        function updateNoteCell(btn, data) {

            var td = $(btn).closest('td');

            console.log("td = ", td)
            console.log("data = ", data);
            if (data) {
                var checked5 = data.rate == 5 ? "checked" : "";
                var checked4 = data.rate == 4 ? "checked" : "";
                var checked3 = data.rate == 3 ? "checked" : "";
                var checked2 = data.rate == 2 ? "checked" : "";
                var checked1 = data.rate == 1 ? "checked" : "";

                td.html(`                            <div class='rating' disabled style="max-width:50px;">
                                                                                              <input type='radio' name='rating${data.id}' ${checked5} value='5' id='5ll${data.id}'><label for='5ll${data.id}' style='font-size:1vw;'>☆</label>
                                                                                              <input type='radio' name='rating${data.id}' ${checked4} value='4' id='4ll${data.id}'><label for='4ll${data.id}' style='font-size:1vw;'>☆</label>
                                                                                              <input type='radio' name='rating${data.id}' ${checked3} value='3' id='3ll${data.id}'><label for='3ll${data.id}' style='font-size:1vw;'>☆</label>
                                                                                              <input type='radio' name='rating${data.id}' ${checked2} value='2' id='2ll${data.id}'><label for='2ll${data.id}' style='font-size:1vw;'>☆</label>
                                                                                              <input type='radio' name='rating${data.id}' ${checked1} value='1' id='1ll${data.id}'><label for='1ll${data.id}' style='font-size:1vw;'>☆</label>
                                                                                            </div>

                                                                            <button type="button" data-method="GET"
                                                                                                                         data-modaltitle="Avis du client"
                                                                                                                                          data-modalbody="${data.customerFeedback}"
                                                                                                                         data-toggle="modal"
                                                                                                                          data-target="#genericModal" rel="tooltip"
                                                                                                                        class="btn btn-primary btn-sm m-2" data-original-title="" title="">
                                                                                                                    Avis et Note
                                                                             </button>
                                                            `);
                //  td.html(`${data.solde} F CFA`);


            }

        }
    </script>
            }